FROM fedora:39
ENV HOME=/

RUN dnf install -y git rpmdevtools 'dnf-command(builddep)' && \
    rpmdev-setuptree

WORKDIR /src

# Pull python-torch packaging from Fedora and set up build tree
RUN git clone --depth 1 https://src.fedoraproject.org/rpms/python-torch.git && \
    mv python-torch/python-torch.spec /rpmbuild/SPECS/ && \
    mv python-torch/* /rpmbuild/SOURCES/

WORKDIR /rpmbuild

# TODO --undefine=_disable_source_fetch is not safe but downloads the cuda deps
RUN rpmbuild --undefine=_disable_source_fetch --without rocm --with cuda -bs SPECS/python-torch.spec

RUN dnf builddep -y SRPMS/python-torch*.src.rpm

# Install CUDA
ARG CUDA_DISTRO=fedora39
RUN dnf install -y 'dnf-command(config-manager)' && \
    dnf config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/${CUDA_DISTRO}/$(arch)/cuda-${CUDA_DISTRO}.repo && \
    dnf install -y cuda-toolkit-12

# Install CUDNN
ARG CUDNN_VERSION=9.1.0.70_cuda12
# There is no Fedora version of CUDNN published by Nvidia, so use the agnostic version
RUN dnf install -y wget xz && \
    wget https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/linux-$(arch)/cudnn-linux-$(arch)-${CUDNN_VERSION}-archive.tar.xz && \
    tar xf cudnn-linux*.tar.xz && \
    mv cudnn-linux-*-archive /usr/local/cudnn && \
    rm -f cudnn-linux*.tar.xz

# Install cuSPARSELt
ARG CUSPARSELT_VERSION=0.6.1.0
# There is no Fedora version of cuSPARSELt published by Nvidia, so use the agnostic version
RUN wget https://developer.download.nvidia.com/compute/cusparselt/redist/libcusparse_lt/linux-$(arch)/libcusparse_lt-linux-$(arch)-${CUSPARSELT_VERSION}-archive.tar.xz && \
    tar xf libcusparse_lt-linux*.tar.xz && \
    mv libcusparse_lt-linux-*-archive /usr/local/libcusparse_lt && \
    rm -rf libcusparse_lt-linux*.tar.xz

ENV CUDAToolkit_ROOT=/usr/local/cuda
ENV CUDNN_ROOT=/usr/local/cudnn
ENV CUSPARSELT_ROOT=/usr/local/libcusparse_lt

RUN rpmbuild --without rocm --with cuda --rebuild SRPMS/python-torch*.src.rpm

# TODO testing, should be in new stage
RUN dnf install -y /rpmbuild/RPMS/*/python3-torch-*.rpm

ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV NVIDIA_VISIBLE_DEVICES=all


